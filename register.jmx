<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="TestTemplate" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">api.url.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="api" elementType="Argument">
            <stringProp name="Argument.name">api</stringProp>
            <stringProp name="Argument.value">api/v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">${__P(threads,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">${__P(rampup,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="counter" elementType="Argument">
            <stringProp name="Argument.name">counter</stringProp>
            <stringProp name="Argument.value">${__P(counter,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="apiversion" elementType="Argument">
            <stringProp name="Argument.name">apiversion</stringProp>
            <stringProp name="Argument.value">1.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Config" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="threads" elementType="Argument">
            <stringProp name="Argument.name">threads</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">300</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="counter" elementType="Argument">
            <stringProp name="Argument.name">counter</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Threads" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1492593066000</longProp>
        <longProp name="ThreadGroup.end_time">1492593066000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">${counter}</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="newuser" elementType="Argument">
              <stringProp name="Argument.name">newuser</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sync" elementType="Argument">
              <stringProp name="Argument.name">sync</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jwt" elementType="Argument">
              <stringProp name="Argument.name">jwt</stringProp>
              <stringProp name="Argument.value">0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="deviceid" elementType="Argument">
              <stringProp name="Argument.name">deviceid</stringProp>
              <stringProp name="Argument.value">farkow</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="DeviceId" enabled="false">
          <stringProp name="variableName">deviceid</stringProp>
          <stringProp name="outputFormat">${__RandomString(16,0123456789qwertyuiopasdfghjklzxcvbnm,)}000000000000</stringProp>
          <stringProp name="minimumValue">111111111111</stringProp>
          <stringProp name="maximumValue">999999999999</stringProp>
          <stringProp name="randomSeed"></stringProp>
          <boolProp name="perThread">true</boolProp>
        </RandomVariableConfig>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="DeviceDecide" enabled="false">
          <stringProp name="BeanShellSampler.query">int dd = 0;
dd = Integer.parseInt(vars.get(&quot;counter&quot;));
vars.put(&quot;newuser&quot;, &quot;1&quot;);

if(1 == 1 || (dd % 2) == 0)
{
	vars.put(&quot;deviceid&quot;, &quot;farkow&quot;);
	vars.put(&quot;newuser&quot;, &quot;0&quot;);
}</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="init" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
   &quot;device_info&quot;:&#xd;
   {&#xd;
       &quot;device_id&quot;: &quot;${deviceid}${counter}&quot;,&#xd;
       &quot;country&quot;: &quot;en_US&quot;,&#xd;
       &quot;guid&quot;: &quot;FARKOW&quot;,&#xd;
       &quot;system_name&quot;: &quot;6c603090-98d3-414c-a6b1-54fb6f2f1c7d&quot;,&#xd;
       &quot;notification_token&quot;: &quot;&quot;,&#xd;
       &quot;model&quot;: &quot;Development&quot;,&#xd;
       &quot;brand&quot;: &quot;Linux&quot;,&#xd;
       &quot;os_version&quot;: &quot;Linux&quot;,&#xd;
       &quot;os_build_version&quot;: 1,&#xd;
       &quot;platform&quot;: &quot;Windows&quot;,&#xd;
       &quot;language&quot;: &quot;Unknown&quot;,&#xd;
       &quot;manufacturer&quot;: &quot;Unknown&quot;,&#xd;
       &quot;device_name&quot;: &quot;Unknown&quot;,&#xd;
       &quot;device_type&quot;: &quot;mobile&quot;&#xd;
   },&#xd;
   &quot;app_info&quot;:&#xd;
   {&#xd;
       &quot;bundle_id&quot;: &quot;PLATFORM_LINUX&quot;,&#xd;
       &quot;app_version&quot;: &quot;${apiversion}&quot;&#xd;
   },&#xd;
   &quot;user&quot;:&#xd;
   {&#xd;
       &quot;startup&quot;: &quot;true&quot;,&#xd;
       &quot;global_view_version&quot;: &quot;0&quot;&#xd;
   }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${url}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${api}/auth/register</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JWT" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">jwt</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.auth.jwt</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="ValidJWT" enabled="true">
          <stringProp name="IfController.condition">&quot;${jwt}&quot;!=&quot;0&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="initiallogin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;user&quot;: {&#xd;
		&quot;username&quot;: &quot;${deviceid}${counter}@farkow.com&quot;&#xd;
    },&#xd;
    &quot;device_info&quot;:&#xd;
   {&#xd;
       &quot;device_id&quot;: &quot;${deviceid}${counter}&quot;,&#xd;
       &quot;country&quot;: &quot;en_US&quot;,&#xd;
       &quot;guid&quot;: &quot;564FD31640E9E759E238CE85823BC8C5&quot;,&#xd;
       &quot;system_name&quot;: &quot;6c603090-98d3-414c-a6b1-54fb6f2f1c7d&quot;,&#xd;
       &quot;notification_token&quot;: &quot;&quot;,&#xd;
       &quot;model&quot;: &quot;Development&quot;,&#xd;
       &quot;brand&quot;: &quot;Linux&quot;,&#xd;
       &quot;os_version&quot;: &quot;Linux&quot;,&#xd;
       &quot;os_build_version&quot;: 10,&#xd;
       &quot;platform&quot;: &quot;Windows&quot;,&#xd;
       &quot;language&quot;: &quot;Unknown&quot;,&#xd;
       &quot;manufacturer&quot;: &quot;Unknown&quot;,&#xd;
       &quot;device_name&quot;: &quot;Unknown&quot;,&#xd;
       &quot;device_type&quot;: &quot;mobile&quot;&#xd;
   },&#xd;
    &quot;app_info&quot;:{&#xd;
        &quot;bundle_id&quot;: &quot;x.mobile&quot;,&#xd;
        &quot;build_number&quot;: &quot;1&quot;,&#xd;
        &quot;app_version_readable&quot;: &quot;0.1.0.99&quot;,&#xd;
        &quot;app_version&quot;: &quot;${apiversion}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${api}/auth/initial-login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${jwt}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="register" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;user&quot;: {&#xd;
	   &quot;first_name&quot;: &quot;farkow&quot;,&#xd;
	   &quot;last_name&quot;: &quot;farkow&quot;,&#xd;
        &quot;email&quot;: &quot;${deviceid}${counter}@farkow.com&quot;,&#xd;
        &quot;password&quot;: &quot;876543210&quot;,&#xd;
        &quot;password_confirmation&quot;: &quot;876543210&quot;,&#xd;
	   &quot;privacy_check&quot;: &quot;checked&quot;,&#xd;
	   &quot;rules_check&quot;: &quot;checked&quot;,&#xd;
	   &quot;auth_usr_id&quot;: &quot;6666${xctr1}&quot;&#xd;
    },&#xd;
    &quot;device_info&quot;:&#xd;
   {&#xd;
       &quot;device_id&quot;: &quot;${deviceid}${counter}&quot;,&#xd;
       &quot;country&quot;: &quot;en_US&quot;,&#xd;
       &quot;guid&quot;: &quot;564FD31640E9E759E238CE85823BC8C5&quot;,&#xd;
       &quot;system_name&quot;: &quot;6c603090-98d3-414c-a6b1-54fb6f2f1c7d&quot;,&#xd;
       &quot;notification_token&quot;: &quot;&quot;,&#xd;
       &quot;model&quot;: &quot;Development&quot;,&#xd;
       &quot;brand&quot;: &quot;Linux&quot;,&#xd;
       &quot;os_version&quot;: &quot;Linux&quot;,&#xd;
       &quot;os_build_version&quot;: 10,&#xd;
       &quot;platform&quot;: &quot;Windows&quot;,&#xd;
       &quot;language&quot;: &quot;Unknown&quot;,&#xd;
       &quot;manufacturer&quot;: &quot;Unknown&quot;,&#xd;
       &quot;device_name&quot;: &quot;Unknown&quot;,&#xd;
       &quot;device_type&quot;: &quot;mobile&quot;&#xd;
   },&#xd;
    &quot;app_info&quot;:{&#xd;
        &quot;bundle_id&quot;: &quot;x.mobile&quot;,&#xd;
        &quot;build_number&quot;: &quot;1&quot;,&#xd;
        &quot;app_version_readable&quot;: &quot;0.1.0.99&quot;,&#xd;
        &quot;app_version&quot;: &quot;${apiversion}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${url}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${api}/auth/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${jwt}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JWT" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">jwt</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.auth.jwt</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
